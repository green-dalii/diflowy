---
import Footer from "../components/ui/Footer.astro";
import Navbar from "../components/ui/Navbar.astro";
import MainHead from "./MainHead.astro";
import i18next from "i18next";

const { ...props } = Astro.props;
---

<html lang={i18next.language}>
  <MainHead {...props} />
  <body>
    <main>
      <Navbar />
      <slot />
      <Footer />
    </main>
  </body>
</html>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    setDocumentDirection();
    // detectAndRedirect();
  });

  function setDocumentDirection() {
    const pathPrefix = "/ar";
    if (window.location.pathname.startsWith(pathPrefix)) {
      document.documentElement.dir = "rtl";
    } else {
      document.documentElement.dir = "ltr";
    }
  }

  // function detectAndRedirect() {

  //   type SupportedLang = 'en' | 'zh' | 'zh-Hant' | 'ja' | 'ko' | 'fr' | 'pt' | 'es' | 'de' | 'it' | 'ru' | 'ar' ;
  //   const DEFAULT_LANG: SupportedLang = 'en';
  //   const supportedLanguages: Record<SupportedLang, string> = {
  //     'en': '',
  //     'zh': '/zh',
  //     "zh-Hant": "/zh-Hant",
  //     "ja": "/ja",
  //     "ko": "/ko",
  //     "fr": "/fr",
  //     "pt": "/pt",
  //     "es": "/es",
  //     "de": "/de",
  //     "it": "/it",
  //     "ru": "/ru",
  //     "ar": "/ar"
  //   };

  //   // Extract all language prefixes from the supportedLanguages object
  //   const languagePrefixes = Object.values(supportedLanguages).filter(prefix => prefix !== '');

  //   // Get the current path, query string, and hash
  //   const currentPath = window.location.pathname;
  //   const queryString = window.location.search;
  //   const hash = window.location.hash;

  //   // Check if the current path starts with a supported language prefix
  //   if (languagePrefixes.some(prefix => currentPath.startsWith(prefix))) {
  //     return;
  //   }

  //   // Check if the current path starts with '/en/' and redirect to the new path
  //   if (currentPath.startsWith('/en/')) {
  //     const newPath = currentPath.replace('/en', '') + queryString + hash;
  //     window.location.href = newPath;
  //     return;
  //   }

  //   // Check if the current path starts with '/' and redirect to the new path
  //   const browserLang = navigator.languages
  //     ? navigator.languages[0]
  //     : (navigator.language);
    
  //   const shortLang = browserLang.substring(0, 2).toLowerCase();
    
  //   function isSupportedLanguage(lang: string): lang is SupportedLang {
  //     return Object.keys(supportedLanguages).includes(lang);
  //   }
    
  //   if (isSupportedLanguage(shortLang)) {
  //     const newPrefix = supportedLanguages[shortLang];
  //     // if current path is the default language, return
  //     if (shortLang === DEFAULT_LANG && !languagePrefixes.some(prefix => currentPath.startsWith(prefix))) {
  //       return;
  //     }
  //     // make new path
  //     const newPath = `${newPrefix}${currentPath}${queryString}${hash}`;
  //     const currentFullPath = currentPath + queryString + hash;
  //     if (newPath !== currentFullPath) {
  //       window.location.href = newPath;
  //     }
  //   } else {
  //     // if isn't supported language, check if current path is the default language, return
  //     if (languagePrefixes.some(prefix => currentPath.startsWith(prefix))) {
  //       // if has other prefix, remove it
  //       const pathWithoutPrefix = currentPath.replace(/^\/[a-z]{2}/, '');
  //       window.location.href = pathWithoutPrefix + queryString + hash;
  //     }
  //   }
  // }
  // window.addEventListener('languagechange', setDocumentDirection);
</script>
<!-- Cloudflare Web Analytics -->
<script
  type="module"
  src="https://static.cloudflareinsights.com/beacon.min.js"
  data-cf-beacon='{"token": "94c3b9290009489fb3a79d942819c12f"}'></script>
<!-- End Cloudflare Web Analytics -->
