---
import { changeLanguage, t } from "i18next";
import { localizePath } from "astro-i18next";
import { Icon } from "astro-icon/components";
import MainLayout from "../../../layouts/MainLayout.astro";
import SectionTitle from "../../../components/ui/SectionTitle.astro";
import Section from "../../../components/sections/Section.astro";
import Breadcrumbs from "../../../components/ui/Breadcrumbs.astro";
import "../../../styles/globals.css";

changeLanguage("de");

const description = t("user.description");
const urlList = Astro.url.pathname.split("/").filter(Boolean);
---

<MainLayout
  title={t("site.joinworkspace")}
  description={t("site.description")}
>
  <Breadcrumbs urlList={urlList} />
  <div class="mt-20">
    <Section>
      <SectionTitle sectionTitle={t("user.title")} description={description} />
      <div class="sm:grid sm:grid-cols-6 mt-40">
        <div id="not-login" class="sm:col-start-3 sm:col-span-2 text-center">
          <p class="text-sm">
            {t("user.before")}
          </p>
          <a id="login-link" href="/login"
            ><button class="btn-primary w-full py-2 my-10" id="login"
              >{t("user.loginbtn")}</button
            >
          </a>
        </div>
      </div>
      <div id="protected-content" style="display: none;">
        <div class="w-full sm:w-80 mx-auto">
          <form id="tokenForm" class="flex flex-col gap-4">
            <div class="flex flex-col gap-2">
              <label for="workspacetoken" class="text-sm font-medium"
                >{t("user.workspacetoken")}</label
              >
              <input
                type="text"
                id="workspaceToken"
                name="workspaceToken"
                class="input input-bordered w-full"
                required
              />
            </div>
            <button
              type="submit"
              class="btn-primary w-full md:w-auto flex items-center gap-2 text-sm justify-center"
            >
              <Icon name="newMember" class="text-3xl" /><span
                >{t("user.joinbtn")}</span
              >
            </button>
          </form>
        </div>
      </div>
    </Section>
  </div>
</MainLayout>

<script>
  import type { JoinWorkspaceResponse } from "../../../utils/tools";
  // Get the modal element
  const modal = document.getElementById("modal") as HTMLDialogElement;
  const modalTitle = document.getElementById(
    "modalTitle",
  ) as HTMLHeadingElement;
  const modalContent = document.getElementById(
    "modalContent",
  ) as HTMLDivElement;
  const confirmBtn = document.getElementById("confirmBtn") as HTMLButtonElement;
  // Get the form element
  const tokenForm = document.getElementById("tokenForm") as HTMLFormElement;
  // handle submit
  async function handleTokenSubmit(event: Event) {
    console.log("Submit Token...")
    event.preventDefault()
    // Show loading modal
    modalTitle.innerText = "⏳ Validating...";
    modalContent.innerText = "Validating your token...";
    confirmBtn.classList.toggle("hidden", true);
    modal.showModal();
    // Get the form data
    const formData = new FormData(tokenForm);
    // check if token is valid
    if(!formData.get("workspaceToken")) {
      modalTitle.innerText = "😮 Oops";
      modalContent.innerText = "Please fill out the token field.";
      modal.showModal();
      return;
    } else {
      try{
        await fetch("/api/user/workspace/member/join", {
          method: "POST",
          body: formData,
        }).then(async (response) => {
          // get json message from response
          const data = await (response.json() as Promise<JoinWorkspaceResponse>);
          if (response.ok) {
            // Redirect to the workspace page
            modalTitle.innerText = "🎉 Join Workspace Success";
            modalContent.innerText = "You have successfully joined the workspace. Redirecting to workspace page in 2 seconds...";
            modal.showModal();
            confirmBtn.classList.toggle("hidden", true);
            setTimeout(() => {
              window.location.href = "/user/workspace";
            }, 2000);
          } else {
            // Show error modal
            modalTitle.innerText = "😮 Oops";
            modalContent.innerText = data.res;
            confirmBtn.classList.toggle("hidden", true);
            modal.showModal();
          }
        });
      } catch (error) {
        // Show error modal
        modalTitle.innerText = "😮 Oops";
        modalContent.innerText = "Something went wrong.";
        confirmBtn.classList.toggle("hidden", true);
        modal.showModal();
        console.error(error);
        return;
      }
    }
  }

  document.addEventListener("DOMContentLoaded",() => {
    tokenForm.addEventListener("submit", handleTokenSubmit);
  });
</script>
