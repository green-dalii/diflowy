---
import MainLayout from "../layouts/MainLayout.astro";
import { Icon } from "astro-icon/components";
import Section from "../components/sections/Section.astro";
import SectionTitle from "../components/ui/SectionTitle.astro";
import { t, changeLanguage } from "i18next";
import "../styles/globals.css";

changeLanguage("en");

const description = t("register.description");
---

<MainLayout title={t("site.register")} description={t("site.description")}>
  <div class="mt-48">
    <Section>
      <SectionTitle
        sectionTitle={t("register.title")}
        description={description}
      />
      <div class="flex flex-col items-center justify-center my-32">
        <div class="w-full sm:w-72">
          <form id="register-form" class="flex flex-col gap-4">
            <div class="flex flex-col gap-2">
              <label for="email" class="text-sm font-medium"
                >{t("login.email")}</label
              >
              <input
                type="email"
                id="email"
                class="input input-bordered w-full"
                placeholder="Comming soon..."
                required
              />
            </div>
            <div class="flex flex-col gap-2">
              <label for="username" class="text-sm font-medium"
                >{t("register.username")}</label
              >
              <input
                type="text"
                id="username"
                class="input input-bordered w-full"
                placeholder="Comming soon..."
                required
              />
            </div>
            <div class="flex flex-col gap-2">
              <label for="password" class="text-sm font-medium"
                >{t("login.password")}</label
              >
              <input
                type="password"
                id="password"
                class="input input-bordered w-full"
                placeholder="Comming soon..."
                required
              />
            </div>
            <div class="flex flex-col gap-2">
              <label for="confirm-password" class="text-sm font-medium"
                >{t("register.confirm")}</label
              >
              <input
                type="password"
                id="confirm-password"
                class="input input-bordered w-full"
                placeholder="Comming soon..."
                required
              />
            </div>
            <button
              type="submit"
              class="btn-primary w-full md:w-auto flex items-center gap-2 text-sm justify-center"
            >
              <Icon name="login" class="text-3xl" /><span
                >{t("register.emailregister")}</span
              >
            </button>
          </form>
          <div class="mt-8">
            <p class="text-xs text-gray-400">
              {t("login.principle1")}
              <span class="italic">{t("login.mininecessity")}</span>{
                t("login.principle2")
              }
            </p>
            <p class="text-xs text-gray-400">
              {t("login.more")}<a
                class="link font-semibold"
                href="/login/privacy/">{t("navbar.privacypolicy")}</a
              >
            </p>
          </div>
        </div>
      </div>
    </Section>
  </div>
</MainLayout>

<script>
  interface LoginResponseBody {
    message: string;
    success: boolean;
    user?: {
      id: string;
      email: string;
      username: string;
    };
  }

  // Get the modal element
  const modal = document.getElementById("modal") as HTMLDialogElement;
  const modalTitle = document.getElementById(
    "modalTitle",
  ) as HTMLHeadingElement;
  const modalContent = document.getElementById(
    "modalContent",
  ) as HTMLDivElement;
  // When all Dom is loaded
  document.addEventListener("DOMContentLoaded", () => {
    try {
      // Get form element
      const form = document.getElementById("register-form") as HTMLFormElement;
      // Get email and password input elements
      const emailInput = document.getElementById("email") as HTMLInputElement;
      const passwordInput = document.getElementById(
        "password",
      ) as HTMLInputElement;
      // Add event listener to form submit event
      form.addEventListener("submit", async (event) => {
        event.preventDefault();
        // Get form data
        const formData = new FormData(form);
        formData.append("email", emailInput.value);
        formData.append("password", passwordInput.value);
        // Send form data to server
        const response = await fetch("/api/register", {
          method: "POST",
          body: formData,
        });
        // Get response data
        const data = (await response.json()) as LoginResponseBody;
        // Check if response is successful
        if (!response.ok) {
          console.error("Error in register:", data);
          if (data.message === "Invalid email or password") {
            modalTitle.textContent = "Error";
            modalContent.textContent = "Invalid email or password";
            modal.showModal();
            return;
          } else if (data.message === "No user found with this email") {
            modalTitle.textContent = "Error";
            modalContent.textContent =
              "No user found with this email, please register first";
            modal.showModal();
            setTimeout(() => {
              window.location.href = "/register/";
            }, 2000);
            return;
          }
          // Show error message
          modalTitle.textContent = "Error";
          modalContent.textContent = data.message;
          modal.showModal();
          return;
        } else {
          // Show success message
          modalTitle.textContent = "Success";
          modalContent.textContent = data.message;
          modal.showModal();
          // Redirect to home page
          setTimeout(() => {
            window.location.href = "/";
          }, 1000);
        }
      });
    } catch (error) {
      console.error("Error in login:", error);
      modalTitle.textContent = "Error";
      modalContent.textContent = "Something went wrong";
      modal.showModal();
    }
  });
</script>
