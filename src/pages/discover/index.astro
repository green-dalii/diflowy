---
import MainLayout from "../../layouts/MainLayout.astro";
import SectionTitle from "../../components/ui/SectionTitle.astro";
import Section from "../../components/sections/Section.astro";
import Skeleton from "../../components/ui/Skeleton.astro";
import "../../styles/globals.css";
const description = "Find your workflows in Diflowy";
const count = 12;
---

<MainLayout title="Diflowy" description="Where Dify workflows are stored">
  <div class="mt-48">
    <Section>
      <SectionTitle
        sectionTitle="Discover your workflows"
        description={description}
      />
      <div
        id="workflow-grid"
        class="grid grid-cols-1 justify-center sm:grid-cols-2 lg:grid-cols-3 gap-5"
      >
        {new Array(count).fill(null).map((_) => <Skeleton />)}
      </div>
    </Section>
  </div>
</MainLayout>

<script>
  interface Workflow {
    id: string;
    name: string;
    icon: string;
    description: string;
    tags: string;
  }

  interface GetWorkflowsResponse {
    workflows: Workflow[];
    total: number;
    page: number;
    pageSize: number;
  }

  async function fetchWorkflows(
    page: number = 1,
    pageSize: number = 10,
  ): Promise<GetWorkflowsResponse> {
    const url = new URL("/api/workflow/get", window.location.origin);
    url.searchParams.append("page", page.toString());
    url.searchParams.append("pageSize", pageSize.toString());
    url.searchParams.append("tags", "");
    console.log("Fetching workflows from:", url.toString());
    const response = await fetch(url.toString());

    if (!response.ok) {
      console.error("Failed to fetch workflows");
      throw new Error("Failed to fetch workflows");
    }

    return (await response.json()) as GetWorkflowsResponse;
  }

  // 使用示例
  try {
    const result = await fetchWorkflows(1, 10);
    console.log("Workflows:", result.workflows);
    console.log("Total:", result.total);
    console.log("Page:", result.page);
    console.log("Page Size:", result.pageSize);
    const workflowGrid = document.getElementById(
      "workflow-grid",
    ) as HTMLDivElement;
    workflowGrid.innerHTML = "";
    result.workflows.forEach((workflow) => {
      const workflowLink = document.createElement("a")
      workflowLink.setAttribute('href',`/workflow/get/${workflow.id}`)
      const workflowElement = document.createElement("div");
      let tags;
      try {
        tags = JSON.parse(workflow.tags);
      } catch (error) {
        console.error("Error parsing tags for workflow:", workflow.name, error);
        tags = [];
      }
      const tagsHTML = tags
        .map((tag: string) => `<span class="tag text-xs">${tag}</span>`)
        .join("");

      workflowElement.className =
        "border shadow hover:shadow-lg rounded-3xl p-4 w-full mx-auto h-48";
      workflowElement.innerHTML = `
      <div class="grid grid-cols-1 content-between h-full">
        <div class="flex flex-row space-x-4 items-center">
            <div class="flex-none rounded-full bg-blue h-12 w-12 text-3xl text-center content-center">${workflow.icon}</div>
            <div class="flex-grow text-3xl text-dark font-bold">${workflow.name}</div>
        </div>
        <div class="flex-1 space-y-4 py-1">
            <div class="ml-16 space-y-3">
                <div class="text-xs text-gray-500 line-clamp-2">${workflow.description}</div>
                <div class="selected-tags">${tagsHTML}</div>
            </div>
        </div>
    </div>
    </div>
          `;
      workflowGrid.appendChild(workflowElement);
      workflowLink.appendChild(workflowGrid);
    });
  } catch (error) {
    console.error("Error fetching workflows:", error);
  }
</script>
