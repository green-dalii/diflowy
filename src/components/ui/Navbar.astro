---
import { Image } from "astro:assets";
import bars from "../../assets/bars.svg";
import brand from "../../assets/brand.svg";
// import { AuthProvider } from "../contexts/AuthContext";
// import { getUserFromToken } from '../../utils/auth';
// const user = getUserFromToken();

const navLinks = [
  {
    name: "Discover",
    href: "/discover",
  },
  {
    name: "Share",
    href: "/upload",
  },
  {
    name: "My Flows",
    href: "#cases",
  },
  {
    name: "Blog",
    href: "#testimonials",
  },
  {
    name: "Contact",
    href: "#contact",
  },
];
---

<div
  class="fixed w-full top-0 z-10 py-5 px-5 h-auto flex justify-center header"
>
  <nav
    aria-label="Main Navigation"
    role="navigation"
    class="w-full flex h-full items-center justify-between"
  >
    <!-- Brand -->
    <div class="xl:flex-none">
      <a href="/">
        <Image
          src={brand}
          alt="Brand Logo"
          class="w-32 sm:w-[8em]"
          loading="eager"
        />
      </a>
    </div>

    <!-- Hamburger menu -->
    <button
      aria-label="menu"
      role="button"
      aria-controls="navmenu"
      aria-expanded="false"
      id="menuButton"
      class="w-12 h-12 xl:hidden cursor-pointer contents"
    >
      <Image src={bars} alt="hamburgerIcon" class="hamburgerIcon" />
    </button>
  </nav>
  <!-- Nav Menu -->
  <div
    id="navmenu"
    class="w-full px-5 xl:px-0 absolute top-full z-10 xl:static xl:flex xl:flex-grow xl:items-center xl:justify-center overflow-hidden duration-500 h-0 xl:h-auto dropdown"
  >
    <!-- Nav Links -->
    <ul
      class="flex flex-col xl:flex-row xl:flex-grow xl:justify-center xl:gap-10"
    >
      {
        navLinks.map((link) => {
          return (
            <li class="p-2 px-0">
              <a id={link.name} href={link.href} class="block">
                {link.name}
              </a>
            </li>
          );
        })
      }
    </ul>

    <!-- Login -->
    <div class="flex xl:flex-row xl:items-center xl:gap-4 flex-col xl:ml-4">
      <a id="login-link" href="/login"
        ><button class="btn-secondary w-full xl:w-auto py-2" id="login"
          >Login</button
        >
      </a>
    </div>
  </div>
</div>
<script>
  document.addEventListener("DOMContentLoaded", (_) => {
    const menuButton = document.getElementById("menuButton");
    const navMenu = document.getElementById("navmenu");

    let isMenuOpen = false;

    if (menuButton && navMenu) {
      menuButton.addEventListener("click", () => {
        /* Handle the height transition */
        isMenuOpen = !isMenuOpen;

        menuButton.setAttribute("aria-expanded", `${isMenuOpen}`);

        if (isMenuOpen) {
          navMenu.style.height = `${navMenu.scrollHeight + 20}px`;
        } else {
          navMenu.style.height = "0px";
        }
      });

      navMenu.addEventListener("click", () => {
        /* Close menu after using it */
        if (isMenuOpen) {
          isMenuOpen = false;
          navMenu.style.height = "0px";
          navMenu.classList.remove("h-auto");
        }
      });

      window.addEventListener("resize", () => {
        /* Resize cleanup screen state*/
        if (window.innerWidth >= 1280) {
          /* Add height if menu was closed and then resize happened */
          navMenu.style.height = "auto";
          navMenu.classList.remove("h-0");
        } else {
          /* Prevent opened menu when going from bit to small */
          navMenu.style.height = "0px";
        }
      });
    }
  });
</script>
<script>
  interface User {
    username: string;
  }

  interface UserResponse {
    user: User | null;
  }

  async function fetchUser() {
    try {
      const response = await fetch('/api/user');
      const data: UserResponse = await response.json();
      console.log("fetch user data>>>", data);
      const loginButton = document.getElementById('login') as HTMLButtonElement;
      const loginLink = document.getElementById('login-link') as HTMLAnchorElement;
      if (data.user) {
        loginButton.textContent = `${data.user.username}`;
        loginLink.setAttribute('href', '/api/logout');
      }
    } catch (error) {
      console.error('Error fetching user:', error);
    }
  }

  fetchUser();
</script>
<!-- 
  Use to highlight the active link in the navigation bar
  Gotta test in dev and prod bc sometimes it doesn't work
---
const pathname = new URL(Astro.request.url).pathname;
const currentPath = pathname.slice(1); // remove the first "/"
---

<nav>
  <a class={currentPath === "" ? "active" : ""} href="/">Home</a>
  <a class={currentPath === "portfolio" ? "active" : ""} href="/portfolio">Portfolio</a>
  <a class={currentPath === "posts" ? "active" : ""} href="/posts">Article</a>
  <a class={currentPath === "about" ? "active" : ""} href="/about">About Me</a>
  <a class={currentPath === "contact" ? "active" : ""} href="/contact">Contact Me</a>
</nav>
-->
<!-- <script>
  const { signIn, signOut } = await import("auth-astro/client")
  document.querySelector("#login").onclick = () => signIn("github")
  document.querySelector("#logout").onclick = () => signOut()
</script> -->
